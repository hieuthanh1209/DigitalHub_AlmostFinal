@model DigitalHub.Models.Customer

@{
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
    ViewBag.Title = "Đổi mật khẩu";
    string currentAction = ViewContext.RouteData.Values["action"].ToString();
}

<div class="container my-3">
    <div class="row">
        <!-- Bên trái: Menu -->
        <div class="col-md-3">
            @Html.Partial("_LeftSidebar")
        </div>

        <!-- Bên phải: Nội dung -->
        <div class="col-md-9">
            <h2 class="mb-3">Đổi mật khẩu</h2>
            <hr class="mt-0 mb-4" />

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    @TempData["SuccessMessage"]
                </div>
            }

            @using (Html.BeginForm("ChangePassword", "Users", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()

                <!-- Mật khẩu hiện tại -->
                <div class="form-group row mb-2 position-relative">
                    @Html.Label("CurrentPassword", "Mật khẩu hiện tại", new { @class = "col-sm-3 col-form-label text-right" })
                    <div class="col-sm-9 position-relative">
                        <input type="password" name="CurrentPassword" id="CurrentPassword" class="form-control" />
                        <span id="currentPasswordIcon" class="position-absolute" style="right: -25px; top: 50%; transform: translateY(-50%); display: none; font-size: 1.5rem;"></span>
                        @Html.ValidationMessage("CurrentPassword", "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Mật khẩu mới -->
                <div class="form-group row mb-2 position-relative">
                    @Html.Label("NewPassword", "Mật khẩu mới", new { @class = "col-sm-3 col-form-label text-right" })
                    <div class="col-sm-9 position-relative">
                        <input type="password" name="NewPassword" id="NewPassword" class="form-control" />
                        <span id="newPasswordIcon" class="position-absolute" style="right: -25px; top: 50%; transform: translateY(-50%); display: none; font-size: 1.5rem;"></span>
                        @Html.ValidationMessage("NewPassword", "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Xác nhận mật khẩu mới -->
                <div class="form-group row mb-2 position-relative">
                    @Html.Label("ConfirmPassword", "Xác nhận mật khẩu mới", new { @class = "col-sm-3 col-form-label text-right" })
                    <div class="col-sm-9 position-relative">
                        <input type="password" name="ConfirmPassword" id="ConfirmPassword" class="form-control" />
                        <span id="confirmPasswordIcon" class="position-absolute" style="right: -25px; top: 50%; transform: translateY(-50%); display: none; font-size: 1.5rem;"></span>
                        @Html.ValidationMessage("ConfirmPassword", "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Nút đổi mật khẩu -->
                <div class="form-group row">
                    <div class="col-sm-9 offset-sm-3">
                        <button type="submit" class="btn btn-primary">Đổi mật khẩu</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script>
    document.getElementById('CurrentPassword').addEventListener('input', function () {
        var currentPassword = this.value;
        var icon = document.getElementById('currentPasswordIcon');

        // Gửi yêu cầu AJAX để xác minh mật khẩu cũ
        fetch('/Users/CheckCurrentPassword', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest' // Để chỉ định yêu cầu AJAX
            },
            body: JSON.stringify({ password: currentPassword })
        })
            .then(response => response.json())
            .then(data => {
                if (data.valid) {
                    icon.textContent = '✅';
                    icon.style.color = 'green';
                    icon.style.display = 'inline';
                } else {
                    icon.textContent = '❌';
                    icon.style.color = 'red';
                    icon.style.display = 'inline';
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
    });

    document.getElementById('NewPassword').addEventListener('input', function () {
        var newPassword = this.value;
        var icon = document.getElementById('newPasswordIcon');
        // Kiểm tra độ mạnh của mật khẩu mới
        var passwordRegex = /^(?=.*[a-zA-Z])(?=.*\d).{8,}$/;
        if (passwordRegex.test(newPassword)) {
            icon.textContent = '✅';
            icon.style.color = 'green';
            icon.style.display = 'inline';
        } else {
            icon.textContent = '❌';
            icon.style.color = 'red';
            icon.style.display = 'inline';
        }
    });

    document.getElementById('ConfirmPassword').addEventListener('input', function () {
        var newPassword = document.getElementById('NewPassword').value;
        var confirmPassword = this.value;
        var icon = document.getElementById('confirmPasswordIcon');
        if (newPassword === confirmPassword && newPassword !== '') {
            icon.textContent = '✅';
            icon.style.color = 'green';
            icon.style.display = 'inline';
        } else {
            icon.textContent = '❌';
            icon.style.color = 'red';
            icon.style.display = 'inline';
        }
    });
</script>
